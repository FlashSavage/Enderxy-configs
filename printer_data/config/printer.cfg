[include mainsail.cfg]

[stepper_x]
step_pin: PB9
dir_pin: !PC2
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: -16
position_min: -16
position_max: 221.5
homing_speed: 50
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper


[stepper_y]
step_pin: PB7
dir_pin: !PB8
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 0
#position_min: 2.5
position_max: 232.5
homing_speed: 50
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper


[stepper_z]
step_pin: PB5
dir_pin: PB6
enable_pin: !PC3
microsteps: 16
rotation_distance: 1.25
endstop_pin: ^PA7
#endstop_pin: probe:z_virtual_endstop
position_endstop: 0.0
position_max: 200
position_min: -2
homing_speed: 60
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper


[extruder]
max_extrude_only_distance: 100.0
step_pin: PB3
dir_pin: PB4
enable_pin: !PC3
microsteps: 16
rotation_distance: 7.888
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
pressure_advance: 0.025
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 300
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper


[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
control: pid
# tuned for stock hardware with 50 degree Celsius target
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: PA0

[mcu]
#serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_310031000651313133353932-if00
#serial: /dev/serial/by-path/platform-3f980000.usb-usb-0:1.4:1.0-port0
restart_method: command
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 1500
max_z_velocity: 5
max_z_accel: 100
minimum_cruise_ratio: 0.5


[virtual_sdcard]
path: ~/printer_data/gcodes


[pause_resume]

[bltouch]
sensor_pin: ^PB1
control_pin: PB0
pin_up_touch_mode_reports_triggered: False
probe_with_touch_mode: True
x_offset: -30
y_offset: -3.5
#z_offset = 1.30
#z_offset = 0.35

[bed_mesh]
speed: 200
horizontal_move_z: 5
mesh_min: 15, 15
mesh_max: 185, 200
probe_count: 3,3
algorithm: lagrange
fade_start: 1
fade_end: 10
fade_target: 0

#[safe_z_home] 
#home_xy_position: 107.5,117.5 # Change coordinates to the center of your print bed
#z_hop: 10                 # Move up 10mm z_hop_speed: 5


[gcode_macro g29]
gcode:
    BED_MESH_CALIBRATE
    BED_MESH_OUTPUT

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

#[gcode_macro SET_PAUSE_AT_LAYER]
#description: Enable/disable a pause if a given layer number is reached
#gcode:
 # {% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
  #{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
 #          else params.LAYER is defined %}
#  {% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
 # {% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
  #SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"


[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro PRINT_START]
gcode:
  {% set BED = params.BED_TEMP|int %}
  {% set EXTRUDER = params.EXTRUDER_TEMP|int %}
    M190 S{BED}  ;Set bed temperature and wait
    G28  ;Home all Axes
    M104 S{EXTRUDER}  ;Set extruder temperature
    M109 S{EXTRUDER}  ;Set extruder temperature and wait
  BED_MESH_PROFILE LOAD=default  ;Load Bed Mesh Profile
    G90  ;Set to absolute positioning
    _PURGE_LINE  


[gcode_macro M190]
rename_existing: M190.1
gcode:
  {% if printer["gcode_macro status_heating"] != null %}
    status_heating
  {% endif %}
    M190.1 { rawparams }
  {% if printer["gcode_macro status_ready"] != null %}
    status_ready
  {% endif %}


[gcode_macro M109]
rename_existing: M109.1
gcode:
  {% if printer["gcode_macro status_heating"] != null %}
    status_heating
  {% endif %}
    M109.1 { rawparams }
  {% if printer["gcode_macro status_ready"] != null %}
    status_ready
  {% endif %}


[gcode_macro _PURGE_LINE]
gcode:
  {% if printer["gcode_macro status_cleaning"] != null %}
    status_cleaning
  {% endif %}
  SAVE_GCODE_STATE NAME=Pre_Prime
        
  G90
  G92 E0 ;Reset Extruder
    G1 Z1.0 F3000    ; move z up little to prevent scratching of surface
    G1 X0.1 Y40 Z0.3 F5000.0  ; move to start-line position
    G1 X0.1 Y180.0 Z0.3 F1000.0 E15  ; draw 1st line
    G1 X0.4 Y180.0 Z0.3 F5000.0  ; move to side a little
    G1 X0.4 Y40 Z0.3 F1000.0 E30  ; draw 2nd line
    G92 E0     ; reset extruder
    G1 Z1.0 F3000    ; move z up little to prevent scratching of surface
    M117 PRINTING !

  {% if printer["gcode_macro status_printing"] != null %}
    status_printing
  {% endif %}


[gcode_macro PRINT_END]
gcode:
    M140 S0  # Turn off bed
    M104 S0  # Turn off extruder
    M106 S0  # Turn off fan
    G92 E0 
    G91
    G0 Z10 F3000   # Raise nozzle by 10mm
    G90
    G1 X0 Y200 E-.5 F3000
    M84 X Y E   # Disable steppers except Z


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
   M220 S100 ; Reset Speed factor override percentage to default (100%)
   M221 S100 ; Reset Extrude factor override percentage to default (100%)
   G91 ; Set coordinates to relative
   {% if printer.extruder.temperature >= 170 %}
      G1 F1800 E-1 ; Retract filament 3 mm to prevent oozing
   {% endif %}
   ;if all axis are homed, lift the hotend to leave room for hot filament to ooze and to keep it clear of the bed.
   {% if printer.toolhead.homed_axes == "xyz" %}
      G1 F6000 Z10 ; Move Z Axis up 10 mm to allow filament ooze freely
      G90 ; Set coordinates to absolute
      G1 X0 Y200 F3000 ; Move Printer Head Out of Way
       M84 X Y E  ; Disable stepper motors - not Z so the gantry stays aligned
   {% endif %}
   ;set part fan speed to zero.
   M106 S0
   ;bed and hotend are left at the print temps in case I want to restart.
   CLEAR_PAUSE
   BASE_CANCEL_PRINT

#[display]
#lcd_type: st7920
#cs_pin: PB12
#sclk_pin: PB13
#sid_pin: PB15
#encoder_pins: ^PB14, ^PB10
#click_pin: ^!PB2

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None


[resonance_tester]
accel_chip: adxl345
probe_points:
    107.5, 117.5, 20  # an example

[input_shaper]
shaper_freq_x: 32.4
shaper_type_x: ei
shaper_freq_y: 28.2
shaper_type_y: mzv

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 1.865
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.050000, 0.020000, -0.020000
#*# 	0.052500, -0.065000, -0.042500
#*# 	0.062500, 0.015000, 0.050000
#*# tension = 0.2
#*# min_x = 15.0
#*# algo = lagrange
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 15.0
#*# x_count = 3
#*# max_y = 200.0
#*# mesh_x_pps = 2
#*# max_x = 185.0
#*#
#*# [input_shaper]
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 34.146
#*# pid_ki = 1.821
#*# pid_kd = 160.061
